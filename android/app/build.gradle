def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.firebase.crashlytics'

android {

    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    // add
    signingConfigs {
        release {
            storePassword ""
            keyAlias ""
            keyPassword ""
            storeFile file("./my-release-key.keystore")
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.application.kokuchi_event"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // add and change
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            shrinkResources true
            useProguard true
            // これを有効にすると失敗すると書いてあった https://qiita.com/Renkon117/items/80d9775eb870416d69bf
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            /* Add the firebaseCrashlytics extension (by default,
           * it's disabled to improve build speeds) and set
           * nativeSymbolUploadEnabled to true. */
//            firebaseCrashlytics {
//                nativeSymbolUploadEnabled true
//            }
        }
    }

    // flavor setting
    flavorDimensions "default"

    // add
    productFlavors {
        development {
            dimension "default"
            applicationIdSuffix ".development"
            versionNameSuffix ".development"
        }
        staging {
            dimension "default"
            applicationIdSuffix ".staging"
            versionNameSuffix ".staging"
        }
        production {
            dimension "default"
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"

    // firebase
    implementation 'com.google.firebase:firebase-analytics:17.5.0'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
}

// firebase
apply plugin: 'com.google.gms.google-services'
